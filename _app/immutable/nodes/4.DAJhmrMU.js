import{h as Q,c as t,n as e,t as w,b as B,e as E,G as n,H as s,r,w as R,m as S,J as U,I as l}from"../chunks/external.HOhiE_KH.js";import{T as V,O as W}from"../chunks/svelte-treeviews.AkoIk0D2.js";import{d as X}from"../chunks/data.BybWqG8f.js";var Y=E('<!> <input class="mtl-checkbox mtl-mr svelte-13kom65" type="checkbox" value="stat.checked"> <span class="mtl-ml svelte-13kom65"> </span>',1),Z=E('<div><h3>Base Tree Example</h3> <hr> <h4>Properties</h4> <label><input type="checkbox"> defaultOpen</label> <label><input type="checkbox"> rtl</label> <br> <label><input type="checkbox"> btt (display from bottom to top)</label> <br> <label><input type="checkbox"> Tree Line</label> <div>indent <input type="number"></div> <hr> <!></div>');function ae(G){const H=Q(X),d=!0,m=!1,_=20,h=!1,f=!0;var p=Z(),J=t(p),P=e(e(J,!0)),j=e(e(P,!0)),u=e(e(j,!0)),x=t(u);n(x),s(),r(u);var i=e(e(u,!0)),k=t(i);n(k),s(),r(i);var q=e(e(i,!0)),c=e(e(q,!0)),y=t(c);n(y),s(),r(c);var z=e(e(c,!0)),v=e(e(z,!0)),O=t(v);n(O),s(),r(v);var b=e(e(v,!0)),T=e(t(b));n(T),r(b);var A=e(e(b,!0)),C=e(e(A,!0));V(C,{class:"mtl-tree",get model(){return H},get defaultOpen(){return d},get rtl(){return m},get indent(){return _},get btt(){return h},get treeLine(){return f},tree_slot:(D,a)=>{let F=()=>a==null?void 0:a().data,o=()=>a==null?void 0:a().info;var L=Y(),g=R(L);S(g,()=>o().children.length,N=>{W(N,{get open(){return o().open},class:"mtl-mr",onclick:()=>o().open=!o().open})});var K=e(e(g,!0)),I=e(e(K,!0)),M=t(I);r(I),w(()=>U(M,F().text)),B(D,L)}}),r(p),w(()=>{l(x,d),l(k,m),l(y,h),l(O,f),l(T,_)}),B(G,p)}export{ae as component};
